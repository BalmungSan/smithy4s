"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[2408],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>h});var r=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(i),d=n,h=c["".concat(l,".").concat(d)]||c[d]||u[d]||a;return i?r.createElement(h,o(o({ref:t},m),{},{components:i})):r.createElement(h,o({ref:t},m))}));function h(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<a;p++)o[p]=i[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}d.displayName="MDXCreateElement"},6750:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=i(7462),n=(i(7294),i(3905));const a={sidebar_label:"SimpleRestJson",title:"The SimpleRestJson protocol"},o=void 0,s={unversionedId:"protocols/simple-rest-json/overview",id:"protocols/simple-rest-json/overview",title:"The SimpleRestJson protocol",description:"Smithy4s provides a custom Json-in/Json-out protocol that smithy services can be annotated with.",source:"@site/../docs/target/jvm-2.13/mdoc/03-protocols/04-simple-rest-json/01-overview.md",sourceDirName:"03-protocols/04-simple-rest-json",slug:"/protocols/simple-rest-json/overview",permalink:"/smithy4s/docs/protocols/simple-rest-json/overview",draft:!1,editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/03-protocols/04-simple-rest-json/01-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"SimpleRestJson",title:"The SimpleRestJson protocol"},sidebar:"tutorialSidebar",previous:{title:"Localstack",permalink:"/smithy4s/docs/protocols/aws/localstack"},next:{title:"Server",permalink:"/smithy4s/docs/protocols/simple-rest-json/server"}},l={},p=[{value:"Semantics",id:"semantics",level:2},{value:"Example spec",id:"example-spec",level:2},{value:"Supported traits",id:"supported-traits",level:2},{value:"Decoding and encoding unions",id:"decoding-and-encoding-unions",level:2},{value:"Json Array Arity",id:"json-array-arity",level:2},{value:"Supported traits",id:"supported-traits-1",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...i}=e;return(0,n.kt)(c,(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Smithy4s provides a custom Json-in/Json-out protocol that smithy services can be annotated with."),(0,n.kt)("p",null,"Smithy4s comes with opt-in http4s-specific module, that contains functions that are aware of this protocol, and can be used to quickly derive http services and clients."),(0,n.kt)("p",null,"As for the json aspect of the protocol, ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/plokhotnyuk/jsoniter-scala/"},"jsoniter-scala")," is used for the (de)serialisation of the http bodies."),(0,n.kt)("h2",{id:"semantics"},"Semantics"),(0,n.kt)("p",null,"In this protocol, the values in shapes are bound to http metadata or body according to the specification of the ",(0,n.kt)("a",{parentName:"p",href:"https://awslabs.github.io/smithy/1.0/spec/core/http-traits.html?highlight=http#http-binding-traits"},"Http Binding traits"),". However, the ",(0,n.kt)("inlineCode",{parentName:"p"},"@mediaType")," trait has no incidence, and all bodies (when present) are serialised in JSON."),(0,n.kt)("h2",{id:"example-spec"},"Example spec"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'namespace smithy4s.example\n\nuse alloy#simpleRestJson\n\n@simpleRestJson\nservice HelloWorldService {\n  version: "1.0.0"\n  // Indicates that all operations in `HelloWorldService`,\n  // here limited to the Hello operation, can return `GenericServerError`.\n  errors: [GenericServerError]\n  operations: [Hello]\n}\n\n@error("server")\n@httpError(500)\nstructure GenericServerError {\n  message: String\n}\n\n@http(method: "POST", uri: "/{name}", code: 200)\noperation Hello {\n  input: Person\n  output: Greeting\n}\n\nstructure Person {\n  @httpLabel\n  @required\n  name: String\n\n  @httpQuery("town")\n  town: String\n}\n\nstructure Greeting {\n  @required\n  message: String\n}\n')),(0,n.kt)("h2",{id:"supported-traits"},"Supported traits"),(0,n.kt)("p",null,"This protocol and its interpreters, are aware of the following traits provided out of the box:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/model.html#simple-shapes"},"all simple shapes")),(0,n.kt)("li",{parentName:"ul"},"composite data shapes, including collections, unions, structures."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/model.html#service"},"operations and services")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/constraint-traits.html#enum-trait"},"enumerations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/type-refinement-traits.html#error-trait"},"error trait")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/http-traits.html"},"http traits"),", including ",(0,n.kt)("strong",{parentName:"li"},"http"),", ",(0,n.kt)("strong",{parentName:"li"},"httpError"),", ",(0,n.kt)("strong",{parentName:"li"},"httpLabel"),", ",(0,n.kt)("strong",{parentName:"li"},"httpHeader"),", ",(0,n.kt)("strong",{parentName:"li"},"httpPayload"),", ",(0,n.kt)("strong",{parentName:"li"},"httpQuery"),", ",(0,n.kt)("strong",{parentName:"li"},"httpPrefixHeaders"),", ",(0,n.kt)("strong",{parentName:"li"},"httpQueryParams"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/protocol-traits.html?highlight=timestampformat#timestampformat-trait"},"timestampFormat trait"))),(0,n.kt)("h2",{id:"decoding-and-encoding-unions"},"Decoding and encoding unions"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"SimpleRestJson")," protocol supports 3 different union encodings :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"tagged (default)"),(0,n.kt)("li",{parentName:"ul"},"untagged"),(0,n.kt)("li",{parentName:"ul"},"discriminated")),(0,n.kt)("p",null,"See the section about ",(0,n.kt)("a",{parentName:"p",href:"/smithy4s/docs/codegen/unions"},"unions")," for a detailed description."),(0,n.kt)("h2",{id:"json-array-arity"},"Json Array Arity"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"By default there is a limit on the arity of an array, which is 1024. This is to prevent the server from being overloaded with a large array as this is a vector for attacks."),(0,n.kt)("li",{parentName:"ul"},"This limit can be changed by setting the maxArity ",(0,n.kt)("inlineCode",{parentName:"li"},"smithy4s.http4s.SimpleRestJsonBuilder.withMaxArity(.)")," to the desired value."),(0,n.kt)("li",{parentName:"ul"},"an example can be seen in the ",(0,n.kt)("a",{parentName:"li",href:"/smithy4s/docs/protocols/simple-rest-json/client"},"client example"))),(0,n.kt)("h2",{id:"supported-traits-1"},"Supported traits"),(0,n.kt)("p",null,"Here is the list of traits supported by ",(0,n.kt)("inlineCode",{parentName:"p"},"SimpleRestJson")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#default")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#error")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#http")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpError")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpHeader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpLabel")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpPayload")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpPrefixHeaders")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpQuery")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#httpQueryParams")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#jsonName")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#length")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#pattern")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#range")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#required")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"smithy.api#timestampFormat")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"alloy#uncheckedExamples")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"alloy#uuidFormat")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"alloy#discriminated")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"alloy#untagged"))),(0,n.kt)("p",null,"Currently, ",(0,n.kt)("inlineCode",{parentName:"p"},"@cors")," is not supported. This is because the ",(0,n.kt)("inlineCode",{parentName:"p"},"@cors")," annotation is too restrictive. You can still use it in your model and configure your API using the information found in the generated code. See the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/disneystreaming/smithy4s/blob/374d3e5cd159dfe40df757123331343582d6648f/modules/guides/src/smithy4s/guides/Cors.scala"},(0,n.kt)("inlineCode",{parentName:"a"},"Cors.scala"))," file in the ",(0,n.kt)("inlineCode",{parentName:"p"},"guides")," module for an example."))}u.isMDXComponent=!0}}]);