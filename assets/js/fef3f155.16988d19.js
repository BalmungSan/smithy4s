"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[706],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var s=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,i=function(e,t){if(null==e)return{};var n,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=s.createContext({}),p=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return n?s.createElement(h,o(o({ref:t},d),{},{components:n})):s.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var p=2;p<r;p++)o[p]=n[p];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6822:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return d}});var s=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],a={sidebar_label:"Installation (CLI)",title:"Installation (CLI)"},l=void 0,p={unversionedId:"overview/cli",id:"overview/cli",title:"Installation (CLI)",description:"Beside the provided sbt plugin, smithy4s can be used as a CLI. It allows generating Scala code and OpenAPI specs from smithy specs.",source:"@site/../docs/target/jvm-2.13/mdoc/01-overview/04-cli.md",sourceDirName:"01-overview",slug:"/overview/cli",permalink:"/smithy4s/docs/overview/cli",editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/01-overview/04-cli.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Installation (CLI)",title:"Installation (CLI)"},sidebar:"tutorialSidebar",previous:{title:"Installation (SBT)",permalink:"/smithy4s/docs/overview/sbt"},next:{title:"Smithy IDL",permalink:"/smithy4s/docs/the-smithy-idl/smithy-idl"}},d=[{value:"Installation",id:"installation",children:[],level:3},{value:"Usage",id:"usage",children:[{value:"Codegen",id:"codegen",children:[],level:4},{value:"Dump model",id:"dump-model",children:[],level:4}],level:3}],c={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Beside the provided sbt plugin, smithy4s can be used as a CLI. It allows generating Scala code and OpenAPI specs from smithy specs."),(0,r.kt)("p",null,"We recommend using ",(0,r.kt)("a",{parentName:"p",href:"https://get-coursier.io/docs/cli-launch"},"coursier")," to install/run it."),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cs install --channel https://disneystreaming.github.io/coursier.json smithy4s\n")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"The CLI comes with a number of options to customize output directories, skip openapi generation (or scala generation), provide a filter of allowed namespaces, etc. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," command to get an exhaustive listing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bash> smithy4s --help\nUsage:\n    smithy4s generate\n    smithy4s dump-model\n\nCommand line interface for Smithy4s\n\nOptions and flags:\n    --help\n        Display this help text.\n\nSubcommands:\n    generate\n        Generates scala code and openapi-specs from smithy specs\n    dump-model\n        Output a JSON view of the Smithy models\n")),(0,r.kt)("h4",{id:"codegen"},"Codegen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bash> smithy4s generate --help\nUsage: generate [--output <path>] [--openapi-output <path>] [--skip-scala] [--skip-openapi] [--discover-models] [--allowed-ns <string>] [--excluded-ns <string>] [--repositories <string>] [--dependencies <string>] [--transformers <string>] [<path>...]\n\nGenerates scala code and openapi-specs from smithy specs\n\nOptions and flags:\n    --help\n        Display this help text.\n    --output <path>, -o <path>\n        Path where scala code should be generated. Defaults to pwd\n    --openapi-output <path>\n        Path where openapi should be generated. Defaults to pwd\n    --skip-scala\n        Indicates that scala code generation should be skipped\n    --skip-openapi\n        Indicates that openapi specs generation should be skipped\n    --discover-models\n        Indicates whether the model assembler should try to discover models in the classpath\n    --allowed-ns <string>\n        Comma-delimited list of namespaces that should not be processed. If unset, all namespaces are processed (except stdlib ones)\n    --excluded-ns <string>\n        Comma-delimited list of namespaces that should not be processed. If unset, all namespaces are processed (except stdlib ones)\n    --repositories <string>\n        Comma-delimited list of repositories to look in for resolving any provided dependencies\n    --dependencies <string>\n        Comma-delimited list of dependencies containing smithy files\n    --transformers <string>\n        Comma-delimited list of transformer names to apply to smithy files\n")),(0,r.kt)("h4",{id:"dump-model"},"Dump model"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"bash> smithy4s dump-model --help\nUsage: dump-model [--repositories <string>] [--dependencies <string>] [--transformers <string>] [<path>...]\n\nOutput a JSON view of the Smithy models\n\nOptions and flags:\n    --help\n        Display this help text.\n    --repositories <string>\n        Comma-delimited list of repositories to look in for resolving any provided dependencies\n    --dependencies <string>\n        Comma-delimited list of dependencies containing smithy files\n    --transformers <string>\n        Comma-delimited list of transformer names to apply to smithy files\n")))}m.isMDXComponent=!0}}]);