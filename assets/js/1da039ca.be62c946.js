"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[314],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),a=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=a(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=a(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var a=2;a<i;a++)s[a]=n[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4857:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return a},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],l={sidebar_label:"Client",title:"SimpleRestJson client"},c=void 0,a={unversionedId:"protocols/simple-rest-json/client",id:"protocols/simple-rest-json/client",title:"SimpleRestJson client",description:"The smithy4s-http4s module provides functions that transform low-level http4s clients into high-level stubs, provided the corresponding service definitions (in smithy) are annotated with the simpleRestJson protocol.",source:"@site/../docs/target/jvm-2.13/mdoc/03-protocols/02-simple-rest-json/03-client.md",sourceDirName:"03-protocols/02-simple-rest-json",slug:"/protocols/simple-rest-json/client",permalink:"/smithy4s/docs/protocols/simple-rest-json/client",editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/03-protocols/02-simple-rest-json/03-client.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Client",title:"SimpleRestJson client"},sidebar:"tutorialSidebar",previous:{title:"Server",permalink:"/smithy4s/docs/protocols/simple-rest-json/server"},next:{title:"Openapi",permalink:"/smithy4s/docs/protocols/simple-rest-json/docs"}},p=[],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"smithy4s-http4s")," module provides functions that transform low-level http4s clients into high-level stubs, provided the corresponding service definitions (in smithy) are annotated with the ",(0,i.kt)("inlineCode",{parentName:"p"},"simpleRestJson")," protocol."),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"build.sbt")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies ++= Seq(\n  // version sourced from the plugin\n  "com.disneystreaming.smithy4s"  %% "smithy4s-http4s" % smithy4sVersion.value\n)\n')),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"Clients.scala")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import smithy4s.http4s._\nimport org.http4s.Uri\nimport org.http4s.client.Client\nimport cats.effect.IO\nimport cats.effect.Resource\n\n// the package under which the scala code was generated\nimport smithy4s.hello._\n\nobject Clients {\n  def helloWorldClient(http4sClient: Client[IO]) : Resource[IO, HelloWorldService[IO]] =\n    HelloWorldService.simpleRestJson.clientResource(\n      http4sClient,\n      Uri.unsafeFromString("http://localhost")\n    )\n\n  // alternatively ...\n  def helloWorldClient2(http4sClient: Client[IO]) : Resource[IO, HelloWorldService[IO]] =\n    SimpleRestJsonBuilder(HelloWorldService).clientResource(\n      http4sClient,\n      Uri.unsafeFromString("http://localhost")\n    )\n}\n')))}m.isMDXComponent=!0}}]);