"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[348],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,y=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(y,o(o({ref:t},d),{},{components:n})):r.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Wildcard types",title:"Scala wildcard type arguments"},o=void 0,s={unversionedId:"codegen/customisation/wildcard",id:"codegen/customisation/wildcard",title:"Scala wildcard type arguments",description:"Scala has a specific syntax for wildcard argument in types. In Scala 2, that was the underscore: _. But with Scala 3, this is changing. See the language reference page for more information.",source:"@site/../docs/target/jvm-2.13/mdoc/04-codegen/01-customisation/08-wildcard.md",sourceDirName:"04-codegen/01-customisation",slug:"/codegen/customisation/wildcard",permalink:"/smithy4s/docs/codegen/customisation/wildcard",draft:!1,editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/04-codegen/01-customisation/08-wildcard.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"Wildcard types",title:"Scala wildcard type arguments"},sidebar:"tutorialSidebar",previous:{title:"Error Unions",permalink:"/smithy4s/docs/codegen/customisation/error-unions"},next:{title:"Typeclass Instances",permalink:"/smithy4s/docs/codegen/customisation/typeclass"}},c={},l=[],d={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Scala has a specific syntax for wildcard argument in types. In Scala 2, that was the underscore: ",(0,a.kt)("inlineCode",{parentName:"p"},"_"),". But with Scala 3, this is changing. See ",(0,a.kt)("a",{parentName:"p",href:"https://docs.scala-lang.org/scala3/reference/changed-features/wildcards.html"},"the language reference page")," for more information."),(0,a.kt)("p",null,"Smithy4s now has a way for you to control that, and the good thing is that you probably don't have to worry about it. If you're using Smithy4s via ",(0,a.kt)("inlineCode",{parentName:"p"},"mill")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"sbt"),", then it's taken care of you. It can be overriden via the following keys:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"in mill, task: ",(0,a.kt)("inlineCode",{parentName:"li"},'def smithy4sWildcardArgument = "?" // or "_"')),(0,a.kt)("li",{parentName:"ul"},"in sbt, setting: ",(0,a.kt)("inlineCode",{parentName:"li"},'smithy4sWildcardArgument := "?" // or "_"'))),(0,a.kt)("p",null,"If you are using Smithy4s via the CLI, then they way to utilize this feature is through your Smithy specifications. The simplest approach is to add a file with the following content to your CLI invocation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'$version: "2"\n\nmetadata smithy4sWildcardArgument = "?" // can also be `_`\n')))}p.isMDXComponent=!0}}]);