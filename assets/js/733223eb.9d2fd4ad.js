"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[343],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return m}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?t.createElement(f,s(s({ref:r},u),{},{components:n})):t.createElement(f,s({ref:r},u))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6283:function(e,r,n){n.r(r),n.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var t=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={sidebar_label:"Error Unions",title:"Error Unions representation"},c=void 0,l={unversionedId:"codegen/customisation/error-unions",id:"codegen/customisation/error-unions",title:"Error Unions representation",description:"By default, smithy4s renders service operations errors as ADTs. For example the following spec:",source:"@site/../docs/target/jvm-2.13/mdoc/04-codegen/01-customisation/07-error-unions.md",sourceDirName:"04-codegen/01-customisation",slug:"/codegen/customisation/error-unions",permalink:"/smithy4s/docs/codegen/customisation/error-unions",draft:!1,editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/04-codegen/01-customisation/07-error-unions.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Error Unions",title:"Error Unions representation"},sidebar:"tutorialSidebar",previous:{title:"Default rendering",permalink:"/smithy4s/docs/codegen/customisation/default-rendering"},next:{title:"Unions and sealed traits",permalink:"/smithy4s/docs/codegen/unions"}},u={},p=[],d={toc:p};function m(e){var r=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"By default, smithy4s renders service operations errors as ADTs. For example the following spec:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'operation Operation {\n  input: Unit,\n  output: Unit,\n  errors: [BadRequest, InternalServerError]\n}\n\n@error("client")\nstructure BadRequest {\n  @required\n  reason: String\n}\n\n@error("server")\nstructure InternalServerError {\n  @required\n  stackTrace: String\n}\n')),(0,a.kt)("p",null,"will generate following scala types (simplified for brevity):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"case class BadRequest(reason: String) extends Throwable\ncase class InternalServerError(stackTrace: String) extends Throwable\n\nsealed trait OperationError\nobject OperationError extends ShapeTag.Companion[OperationError] {\n  case class BadRequestCase(badRequest: BadRequest) extends OperationError\n  case class InternalServerErrorCase(internalServerError: InternalServerError) extends OperationError\n}\n")),(0,a.kt)("p",null,"For Scala 3 users that would like to use native union representation for error types, smithy4s exposes a metadata flag ",(0,a.kt)("inlineCode",{parentName:"p"},"smithy4sErrorsAsScala3Unions")," (defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),")."),(0,a.kt)("p",null,"After adding: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"metadata smithy4sErrorsAsScala3Unions = true\n")),(0,a.kt)("p",null,"to any of the smithy files used for code generation, the following representation will be rendered instead:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"case class BadRequest(reason: String) extends Throwable\ncase class InternalServerError(stackTrace: String) extends Throwable\n\ntype OperationError = BadRequest | InternalServerError\n")))}m.isMDXComponent=!0}}]);