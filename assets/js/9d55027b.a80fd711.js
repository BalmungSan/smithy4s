"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[573],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(r),h=o,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||i;return r?n.createElement(d,s(s({ref:t},c),{},{components:r})):n.createElement(d,s({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1105:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),s=["components"],a={sidebar_label:"SimpleRestJson",title:"The SimpleRestJson protocol"},l=void 0,p={unversionedId:"protocols/simple-rest-json/overview",id:"protocols/simple-rest-json/overview",title:"The SimpleRestJson protocol",description:"Smithy4s provides a custom Json-in/Json-out protocol that smithy services can be annotated with.",source:"@site/../docs/target/jvm-2.13/mdoc/03-protocols/02-simple-rest-json/01-overview.md",sourceDirName:"03-protocols/02-simple-rest-json",slug:"/protocols/simple-rest-json/overview",permalink:"/smithy4s/docs/protocols/simple-rest-json/overview",editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/03-protocols/02-simple-rest-json/01-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"SimpleRestJson",title:"The SimpleRestJson protocol"},sidebar:"tutorialSidebar",previous:{title:"Protocols and smithy4s",permalink:"/smithy4s/docs/protocols/protocols"},next:{title:"Server",permalink:"/smithy4s/docs/protocols/simple-rest-json/server"}},c=[{value:"Semantics",id:"semantics",children:[],level:2},{value:"Example spec",id:"example-spec",children:[],level:2},{value:"Supported taits",id:"supported-taits",children:[],level:2}],m={toc:c};function u(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Smithy4s provides a custom Json-in/Json-out protocol that smithy services can be annotated with."),(0,i.kt)("p",null,"Smithy4s comes with opt-in http4s-specific module, that contains functions that are aware of this protocol, and can be used to quickly derive http services and clients."),(0,i.kt)("p",null,"As for the json aspect of the protocol, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plokhotnyuk/jsoniter-scala/"},"jsoniter-scala")," is used for the (de)serialisation of the http bodies."),(0,i.kt)("h2",{id:"semantics"},"Semantics"),(0,i.kt)("p",null,"In this protocol, the values in shapes are bound to http metadata or body according to the specification of the ",(0,i.kt)("a",{parentName:"p",href:"https://awslabs.github.io/smithy/1.0/spec/core/http-traits.html?highlight=http#http-binding-traits"},"Http Binding traits"),". However, the ",(0,i.kt)("inlineCode",{parentName:"p"},"@mediaType")," trait has no incidence, and all bodies (when present) are serialised in JSON."),(0,i.kt)("h2",{id:"example-spec"},"Example spec"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'namespace smithy4s.example\n\nuse smithy4s.api#simpleRestJson\n\n@simpleRestJson\nservice HelloWorldService {\n  version: "1.0.0",\n  // Indicates that all operations in `HelloWorldService`,\n  // here limited to the Hello operation, can return `GenericServerError`.\n  errors: [GenericServerError],\n  operations: [Hello]\n}\n\n@error("server")\n@httpError(500)\nstructure GenericServerError {\n  message: String\n}\n\n@http(method: "POST", uri: "/{name}", code: 200)\noperation Hello {\n  input: Person,\n  output: Greeting\n}\n')),(0,i.kt)("h2",{id:"supported-taits"},"Supported taits"),(0,i.kt)("p",null,"This protocol and its interpreters, are aware of the following traits provided out of the box:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/model.html#simple-shapes"},"all simple shapes")),(0,i.kt)("li",{parentName:"ul"},"composite data shapes, including collections, unions, structures."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/model.html#service"},"operations and services")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/constraint-traits.html#enum-trait"},"enumerations")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/type-refinement-traits.html#error-trait"},"error trait")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/http-traits.html"},"http traits"),", including ",(0,i.kt)("strong",{parentName:"li"},"http"),", ",(0,i.kt)("strong",{parentName:"li"},"httpError"),", ",(0,i.kt)("strong",{parentName:"li"},"httpLabel"),", ",(0,i.kt)("strong",{parentName:"li"},"httpHeader"),", ",(0,i.kt)("strong",{parentName:"li"},"httpPayload"),", ",(0,i.kt)("strong",{parentName:"li"},"httpQuery"),", ",(0,i.kt)("strong",{parentName:"li"},"httpPrefixHeaders"),", ",(0,i.kt)("strong",{parentName:"li"},"httpQueryParams"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://awslabs.github.io/smithy/1.0/spec/core/protocol-traits.html?highlight=timestampformat#timestampformat-trait"},"timestampFormat trait"))))}u.isMDXComponent=!0}}]);