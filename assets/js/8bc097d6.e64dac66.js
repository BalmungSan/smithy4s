"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[562],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8520:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={sidebar_label:"Stubbed implementations",title:"Stubbed implementations"},l=void 0,c={unversionedId:"overview/stubs",id:"overview/stubs",title:"Stubbed implementations",description:"For various reasons, such as testing/mocking, you may want to instantiate a stub implementation of generated service interfaces. Smithy4s makes it easy, by generating a Default class in the companion object of each service.",source:"@site/../docs/target/jvm-2.13/mdoc/01-overview/06-stubs.md",sourceDirName:"01-overview",slug:"/overview/stubs",permalink:"/smithy4s/docs/overview/stubs",draft:!1,editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/01-overview/06-stubs.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Stubbed implementations",title:"Stubbed implementations"},sidebar:"tutorialSidebar",previous:{title:"Sharing specifications",permalink:"/smithy4s/docs/overview/sharing-specs"},next:{title:"Smithy IDL",permalink:"/smithy4s/docs/the-smithy-idl/smithy-idl"}},u={},p=[],m={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"For various reasons, such as testing/mocking, you may want to instantiate a stub implementation of generated service interfaces. Smithy4s makes it easy, by generating a ",(0,o.kt)("inlineCode",{parentName:"p"},"Default")," class in the companion object of each service."),(0,o.kt)("p",null,"This class has a constructor parameter that requires a value. This value is what is returned when invoking any of the methods"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import smithy4s.hello._\nimport cats.effect._\nval stubbedHelloWorld: HelloWorldService[IO] = new HelloWorldService.Default[IO](IO.stub)\n")),(0,o.kt)("p",null,"Obviously, the generated methods can be overridden."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import smithy4s.hello._\nimport cats.effect._\nval overriddenHelloWorld: HelloWorldService[IO] = new HelloWorldService.Default[IO](IO.stub){\n  override def hello(name: String, town: Option[String]): IO[Greeting] = IO.pure {\n    Greeting(s"Hello $name!")\n  }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NB")," it is important to ascribe the type of the stubbed instance when using this feature."))}f.isMDXComponent=!0}}]);