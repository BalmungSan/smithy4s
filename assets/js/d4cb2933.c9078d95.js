"use strict";(self.webpackChunksmithy4s=self.webpackChunksmithy4s||[]).push([[620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(n),m=a,f=l["".concat(s,".").concat(m)]||l[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"Packed inputs",title:"Packed inputs"},i=void 0,c={unversionedId:"codegen/customisation/packed-inputs",id:"codegen/customisation/packed-inputs",title:"Packed inputs",description:"By default, Smithy4s generates methods the parameters of which map to the fields of the input structure of the corresponding operation.",source:"@site/../docs/target/jvm-2.13/mdoc/04-codegen/01-customisation/01-packed-inputs.md",sourceDirName:"04-codegen/01-customisation",slug:"/codegen/customisation/packed-inputs",permalink:"/smithy4s/docs/codegen/customisation/packed-inputs",draft:!1,editUrl:"https://github.com/disneystreaming/smithy4s/edit/main/modules/docs/src/04-codegen/01-customisation/01-packed-inputs.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Packed inputs",title:"Packed inputs"},sidebar:"tutorialSidebar",previous:{title:"Alloy",permalink:"/smithy4s/docs/protocols/alloy"},next:{title:"ADTs",permalink:"/smithy4s/docs/codegen/customisation/adts"}},s={},p=[],u={toc:p},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"By default, Smithy4s generates methods the parameters of which map to the fields of the input structure of the corresponding operation."),(0,a.kt)("p",null,"For instance :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'service PackedInputsService {\n  version: "1.0.0"\n  operations: [PackedInputOperation]\n}\n\noperation PackedInputOperation {\n  input: PackedInput\n}\n\nstructure PackedInput {\n    @required\n    a: String\n    @required\n    b: String\n}\n')),(0,a.kt)("p",null,"leads to something conceptually equivalent to :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"trait PackedInputServiceGen[F[_]] {\n\n  def packedInputOperation(a: String, b: String): F[Unit]\n\n}\n")),(0,a.kt)("p",null,"It is however possible to annotate the service (or operation) definition with the ",(0,a.kt)("inlineCode",{parentName:"p"},"smithy4s.meta#packedInputs")," trait, in order for the rendered method to contain a single parameter, typed with actual input case class of the operation."),(0,a.kt)("p",null,"For instance :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'use smithy4s.meta#packedInputs\n\n@packedInputs\nservice PackedInputsService {\n  version: "1.0.0"\n  operations: [PackedInputOperation]\n}\n')),(0,a.kt)("p",null,"will produce the following Scala code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"trait PackedInputServiceGen[F[_]] {\n\n  def packedInputOperation(input: PackedInput): F[Unit]\n\n}\n")))}d.isMDXComponent=!0}}]);